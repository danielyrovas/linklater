name: Build, Sign, Release
permissions: write-all
on:
  push:
    branches:
      - trunk
    # tags:
    #   - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

# jobs:
#   build:
#     runs-on: ubuntu-latest
#
#     steps:
#     - name: checkout
#       uses: actions/checkout@v4
#
#     - name: Set up JDK env
#       uses: actions/setup-java@v4
#       with:
#         distribution: 'temurin'
#         java-version: 19
#         cache: 'gradle'
#
#     # - name:
#       # uses: gradle/actions/setup-gradle@v3
#
#     - name: Execute Gradle build
#       run: ./gradlew --no-daemon --build-cache assembleRelease
#
#     # - name: Setup build tool version variable
#     #   shell: bash
#     #   run: |
#     #     BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
#     #     echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
#     #     echo Last build tool version is: $BUILD_TOOL_VERSION
#     #
#     # - name: Sign artifact
#     #   id: sign_artifact
#     #   uses: r0adkll/sign-android-release@v1
#     #   with:
#     #     releaseDirectory: app/build/outputs/apk/release
#     #     alias: ${{ secrets.KEY_ALIAS }}
#     #     signingKeyBase64: ${{ secrets.KEYSTORE }}
#     #     keyStorePassword: ${{ secrets.KEY_PASSWD }}
#     #     keyPassword: ${{ secrets.KEY_PASSWD }}
#     #   env:
#     #     BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}
#
#     - name: Upload our APK
#       uses: actions/upload-artifact@v2
#       with:
#         name: Release artifact
#         path: app/build/outputs/apk/release/app-*.apk
#
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: trunk
#         release_name: Release trunk
#         draft: false
#         prerelease: false
#
#     - name: Save name of our Artifact
#       id: set-result-artifact
#       run: |
#         ARTIFACT_PATHNAME_APK=$(ls app/build/outputs/apk/release/*.apk | head -n 1)
#         ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
#         echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
#         echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
#         echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV
#
#     - name: Upload our Artifact Assets
#       id: upload-release-asset
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
#         asset_name: ${{ env.ARTIFACT_NAME_APK }}
#         asset_content_type: application/zip
